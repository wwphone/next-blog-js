name: SonarQube Scan

on:
  pull_request:
    branches:
      - main

env:
  SONAR_TOKEN: "sqp_441b1af0cbcdd1a08a75ff2b8265ae1483a51d96"
  SONAR_HOST_URL: http://localhost:9000

jobs:
  sonarqube_scan:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:8.9-community
        ports:
          - 9000:9000
        options: >-
          --env SONARQUBE_JDBC_USERNAME=sonar
          --env SONARQUBE_JDBC_PASSWORD=sonar
          --env SONARQUBE_JDBC_URL=jdbc:postgresql://localhost/sonar
          --env SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
          --env SONAR_WEB_JAVA_OPTS=-Dsonar.search.javaOpts=-Djava.net.preferIPv4Stack=true
          --env SONARQUBE_ANALYSIS_MODE=preview
          --env SONAR_AUTHENTICATOR_OPTS=-Dsonar.auth.jwtBase64Hs256Secret=$(SONAR_TOKEN)
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Authenticate with npm
        run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Install dependencies
        run: npm install

      - name: Install dependencies
        run: npm install sonar-scanner

      - name: Build the project
        run: npm run build

      - name: Run SonarQube scanner
        run: |
          npm run build
          sonar-scanner \
            -Dsonar.projectKey=my-project \
            -Dsonar.projectName="My Project" \
            -Dsonar.projectVersion=1.0 \
            -Dsonar.sources=. \
            -Dsonar.exclusions=node_modules/**/* \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN
