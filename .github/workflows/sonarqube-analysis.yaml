name: SonarQube Analysis

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - name: Authenticate with npm
      run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build
    
    - name: Run unit tests
      run: npm run test

    - name: Start SonarQube
      run: docker run -d --name sonarqube -p 9000:9000 sonarqube:latest

    - name: Wait for server to start
      run: |
        curl -o wait-for-it.sh https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh
        chmod +x wait-for-it.sh
        ./wait-for-it.sh localhost:9000 --timeout=60 --strict -- echo "Server is up"

    - name: Generate project token
      run: |
        TOKEN=$(curl -X POST \
               -u admin:admin \
               -H 'Content-Type: application/x-www-form-urlencoded' \
               -d 'name=my_project_token' \
               'http://localhost:9000/api/user_tokens/generate' | \
               jq -r '.token')

        echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV

    # - name: Run SonarQube analysis
    #   run: docker run -d --network="host" -e SONAR_HOST_URL="http://localhost:9000" -e SONAR_TOKEN=$SONAR_TOKEN sonarsource/sonar-scanner-cli:4.6
    #     # run: docker run --rm -e SONAR_HOST_URL=http://host.docker.internal:9000 -v $(pwd):/usr/src -w /usr/src sonarsource/sonar-scanner-cli sonar-scanner

    # - name: Check SonarQube status
    #   run: curl -s -u admin:admin http://localhost:9000/api/system/status | jq .

    # - name: SonarCloud Scan
    #   uses: sonarsource/sonarcloud-github-action@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     SONAR_TOKEN: $SONAR_TOKEN

    # - name: Analyze with SonarCloud
    #   uses: sonarsource/sonarcloud-github-action@master
    #   with:
    #     # projectBaseDir: my-custom-directory
    #     args: >
    #       -Dsonar.projectKey=$SONAR_TOKEN
    #       -Dsonar.python.coverage.reportPaths=coverage.xml
    #       -Dsonar.sources=lib/
    #       -Dsonar.test.exclusions=tests/**
    #       -Dsonar.tests=tests/
    #       -Dsonar.verbose=true


    # - name: SonarQube Scan
    #   run: sonar-scanner
    # - name: SonarQube Pull Request Analysis
    #   uses: sonarsource/sonarqube-github-action@master
    #   with:
    #     token: ${{ secrets.GITHUB_TOKEN }}
    #     project-key: ${{ secrets.SONAR_TOKEN }}
    #     server-url: http://localhost:9000
    #     # github-project: my_username/my_repo
    #     # github-pr-number: ${{ github.event.pull_request.number }}
    #     # source-branch: feature_branch
    #     target-branch: main

    - name: SonarQube Scan
      uses: kitabisa/sonarqube-action@v1.2.0
      with:
        host: http://localhost:9000
        login: ${{ secrets.SONAR_TOKEN }}

    - name: Stop SonarQube
      run: docker stop sonarqube