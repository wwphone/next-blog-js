name: SonarQube Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  sonarqube:
    runs-on: ubuntu-latest
    services:
      sonarqube:
        image: sonarqube:latest
        ports:
          - "9000:9000"
        options: >-
          --health-cmd "curl --fail http://localhost:9000/ || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Start SonarQube
      run: |
        docker-compose up -d sonarqube
        docker-compose ps
        ./wait-for-it.sh localhost:9000 -t 60
    - name: Generate SonarQube token
      env:
        SONAR_USER_HOME: ${{ runner.workspace }}/sonar
      run: |
        mkdir -p $SONAR_USER_HOME
        chmod 777 $SONAR_USER_HOME
        touch $SONAR_USER_HOME/sonar-scanner.properties
        echo "sonar.host.url=http://localhost:9000" >> $SONAR_USER_HOME/sonar-scanner.properties
        echo "sonar.login=${{ secrets.SONARQUBE_AUTH_TOKEN }}" >> $SONAR_USER_HOME/sonar-scanner.properties
        cat $SONAR_USER_HOME/sonar-scanner.properties
    - name: Run SonarQube scanner
      env:
        SONAR_USER_HOME: ${{ runner.workspace }}/sonar
      run: |
        docker run --rm \
          -v ${PWD}:/usr/src \
          -v $SONAR_USER_HOME:/usr/local \
          sonarsource/sonar-scanner-cli \
          sonar-scanner \
            -Dsonar.projectKey=my-project \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://sonarqube:9000 \
            -Dsonar.login=$(cat $SONAR_USER_HOME/sonar-scanner.properties | grep sonar.login | cut -d= -f2) \
            -Dsonar.language=js \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.verbose=true \
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
