name: SonarQube Analysis

on:
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14.x'

    - name: Authenticate with npm
      run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

    - name: Install dependencies
      run: npm install

    - name: Build the project
      run: npm run build

    - name: Start SonarQube
      run: docker run -d --name sonarqube -p 9000:9000 sonarqube:latest

    - name: Wait for SonarQube to start
      run: |
        while ! nc -z localhost 9000; do
          sleep 1
        done

    - name: Generate project token
      run: |
        TOKEN=$(curl -X POST \
               -u admin:admin \
               -H 'Content-Type: application/x-www-form-urlencoded' \
               -d 'name=my_project_token' \
               'http://localhost:9000/api/user_tokens/generate' | \
               jq -r '.token')

        echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV

    - name: Run SonarQube analysis
      run: docker run --network="host" -e SONAR_HOST_URL="http://localhost:9000" -e SONAR_TOKEN=$SONAR_TOKEN sonarsource/sonar-scanner-cli:4.6
        run: docker run --rm -e SONAR_HOST_URL=http://host.docker.internal:9000 -v $(pwd):/usr/src -w /usr/src sonarsource/sonar-scanner-cli sonar-scanner


    - name: Stop SonarQube
      run: docker stop sonarqube

    - name: Check SonarQube status
      run: curl -s -u admin:admin http://localhost:9000/api/system/status | jq .
